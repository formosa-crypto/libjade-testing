require "params.jazz"
require "hashing.jazz"
require "packing.jazz"
require "expandA.jazz"
require "expandMask.jazz"
require "polyvec.jazz"

require "../common/sign_end.jazz"

export
fn sign_jazz(reg u64 ptr_signature, reg u64 ptr_m, reg u64 m_len, reg u64 ptr_sk) {
	stack u8[Li2_SK_LEN] sk;
	reg u8 c;
	reg u64 i;
	stack u8[Li2_SIGN_LEN] signature;

	stack u64 s_ptr_signature;
	reg u64 sig_addr;

	// spilling this
	s_ptr_signature = ptr_signature;
	
	i = 0;
	while(i < Li2_SK_LEN) {
		c = (u8)[ptr_sk + i];
		sk[(int) i] = c;
		i += 1;
	}
	
	signature = sign(ptr_m, m_len, sk);

	sig_addr = s_ptr_signature;
	
	i = 0;
	while(i < Li2_SIGN_LEN) {
		c = signature[(int) i];
		(u8) [sig_addr + i] = c;
		i += 1;
	}
}
