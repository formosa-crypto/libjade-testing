require "../src/dilithium3/ref/gen_matrix.jazz"

export
fn gen_matrix_entry_jazz(reg u64 out) {
	stack u8[32] rho;

	stack u32[Li2_polydeg] buf;
	reg u32 y;
	inline int i;

	for i = 0 to 32 {
		rho[i] = 0;
	}

	buf = gen_matrix_entry(rho, 3, 4, buf);

	for i = 0 to Li2_polydeg {
		y = buf[i];
		(u32) [out + 4 * i] = y;
	}
}

export
fn gen_matrix_jazz(reg u64 ptr_rho, reg u64 ptr_poly)
{
	stack u8[32] rho;
	stack u32[Li2_k * Li2_l * Li2_polydeg] poly;
	reg u64 i;
	reg u8 c;
	reg u32 v;

	i = 0;
	while(i < 32) {
		c = (u8) [ptr_rho + i];
		rho[(int) i] = c;
		i += 1;
	}

	poly = gen_matrix(rho);

	i = 0;
	while(i < Li2_k * Li2_l * Li2_polydeg) {
		v = poly[(int) i];
		(u32) [ptr_poly + 4 * i] = v;
		i += 1;
	}
}
