from Jade require "crypto_sign/dilithium/common/amd64/ntt.jinc"
from Jade require "crypto_sign/dilithium/common/amd64/montgomery.jinc"

export
fn fft_jazz(reg u64 vec)
{	
	stack u32[Li2_polydeg] f;
	reg ptr u32[Li2_polydeg] f_rsp;
	
	reg u32 v32;

	f_rsp = f;

	reg u64 i;
	?{}, i = #set0_64();
	while (i < Li2_polydeg) {
		v32 = (u32) [vec + 4 * i];
		f_rsp[(int) i] = v32;
		i += 1;
	}

	f_rsp = fft(f_rsp);

	?{}, i = #set0_64();
	while (i < Li2_polydeg) {
		v32 = f_rsp[(int) i];
		(u32) [vec + 4 * (int) i] = v32;
		i += 1;
	}
}

export
fn ifft_to_mont_jazz(reg u64 vec)
{
	stack u32[Li2_polydeg] f;
	reg ptr u32[Li2_polydeg] f_rsp;

	reg u32 v32;

	reg u64 i;

	f_rsp = f;

	?{}, i = #set0_64();
	while (i < Li2_polydeg) {
		v32 = (u32) [vec + 4 * (int) i];
		f_rsp[(int) i] = v32;
		i += 1;
	}

	f_rsp = ifft_to_mont(f_rsp);
	
	?{}, i = #set0_64();
	while (i < Li2_polydeg) {
		v32 = f_rsp[(int) i];
		(u32) [vec + 4 * (int) i] = v32;
		i += 1;
	}
}
